---
name: Terraform Pipeline

on:
  release:
    types: [published, created, edited]

jobs:
  terraform:
    name: 'Terraform infrastructure'
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner
    # is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    # Checkout the repository to the GitHub Actions runner
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure
      # the Terraform CLI configuration file with a Terraform Cloud
      # user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating
      # initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere
      # to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      
      # Checks that all Terraform configuration files adhere
      # to CIS polices
      - name: Terraform security scan
        uses: triat/terraform-security-scan@v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR__cloudflare_email: ${{ secrets.cloudflare_email }}
          TF_VAR__cloudflare_api_key: ${{ secrets.cloudflare_api_key }}
          
      - name: Report on config drift
        uses: cloudskiff/driftctl-action@v1
        with:
          version: latest

      - name: terraform-compliance
        uses: terraform-compliance/github_action@main
        with:
          plan: plan.out.json
          features: ssh://git@github.com/Daplanet/Compliance-Tests.git
...
